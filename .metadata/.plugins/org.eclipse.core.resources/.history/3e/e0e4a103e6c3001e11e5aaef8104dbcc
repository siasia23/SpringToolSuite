package com.oracle.oBootJpa02.repository;

import java.util.ArrayList;
import java.util.List;

import com.oracle.oBootJpa02.domain.Member;
import com.oracle.oBootJpa02.domain.Team;

import jakarta.persistence.EntityManager;

public class JpaMemberRepository implements MemberRepository {

	private final EntityManager em;
	
	public JpaMemberRepository(EntityManager em) {
		this.em = em;
	}
	
	@Override
	public Member save(Member member) {

		// Team 저장(persist()) (Member-Team 간의 foreign key 설정)
		
		Team team = new Team();
		
		team.setName(member.getTeamname());
		em.persist(team);
		
		member.setTeam(team);
		em.persist(member);
		
		// member를 찍어보자
		System.out.println("JpaMemberRepository save() member : " + member);
		
		return member;
	}

	@Override
	public List<Member> findAll() {

		String query = "select m from Member m";
		
		List<Member> memberList = em.createQuery(query, Member.class).getResultList();
		
		return memberList;
	}

	@Override
	public List<Member> findByNames(String searchName) {

		String pname = searchName + "%";
		System.out.println("JpaMemberRepository findByNames pname : " + pname);
		
		String query = "select m from Member m where name Like :name";
		
		List<Member> memberList = em.createQuery(query, Member.class)
													.setParameter("name", pname)
													.getResultList();
		
/*		
		String query = "select m from Member m where name Like : name%";
		
		List<Member> memberList = em.createQuery(query, Member.class)
													.setParameter("name", searchName)
													.getResultList();
*/		
		System.out.println("JpaMemberRepository findByNames() memberList.size() : " + memberList.size());
		
		return memberList;
	}

}
