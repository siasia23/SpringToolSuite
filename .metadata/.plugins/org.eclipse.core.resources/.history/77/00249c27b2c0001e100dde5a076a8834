package com.oracle.oBootBoard.command;

import java.util.ArrayList;
import java.util.Map;

import org.springframework.stereotype.Service;
import org.springframework.ui.Model;

import com.oracle.oBootBoard.dao.BDao;
import com.oracle.oBootBoard.dto.BDto;

import jakarta.servlet.http.HttpServletRequest;

//@Service는 @Controller로 보냄

@Service		// boot스러운 방식
public class BExecuteCommand {

	private final BDao jdbcDao;
	
	public BExecuteCommand(BDao jdbcDao) {
		this.jdbcDao = jdbcDao;
	}
	
	// list
	// 게시판 목록
	public void bListCmd(Model model) {
		
		// DAO 연결. boot스럽게

		ArrayList<BDto> boardDtoList = jdbcDao.boardList();
		System.out.println("BExecuteCommand boardDtoList.size() : " + boardDtoList.size());
		
		model.addAttribute("boardList", boardDtoList);
		
	}

	// write_view
	// 새 게시글 작성하기
	public void bWriteCmd(Model model) {

//		1) model이용 , map 선언
		// asMap() : model이를 Map으로 만들자
		Map<String, Object> map = model.asMap();
		
//		2) request 이용 ->  bName  ,bTitle  , bContent  추출
		// Map 형태로 되어 있는 model이를 진짜 Map으로 꺼내자
		HttpServletRequest request = (HttpServletRequest) map.get("request");
		
		String bName = request.getParameter("bName");
		String bTitle = request.getParameter("bTitle");
		String bContent = request.getParameter("bContent");
		
//		3) dao  instance 선언
		// 전역에서 이미 해둬서 Model이가 불러와줌
		
//		4) write method 이용하여 저장(bName, bTitle, bContent)
		jdbcDao.write(bName, bTitle, bContent);
		
	}

	// content_view
	// 게시글 클릭하면 해당 내용 뿌리기
	public void bContentCmd(Model model) {

		// 1. model이를 Map으로 전환
		Map<String, Object> map = model.asMap();
		
		// 2. request -> bId Get
		HttpServletRequest request = (HttpServletRequest) map.get("request");
		
		int bId = Integer.parseInt(request.getParameter("bId"));
		
		BDto board = jdbcDao.contentView(bId);
		
		model.addAttribute("mvc_board", board);
		
	}

	// content_view에서
	// 작성된 게시글 수정하기
	public void bModifyCmd(Model model) {
		
		// 1. model Map선언
		Map<String, Object> map = model.asMap();
		
		// 2. parameter ->  bId, bName , bTitle , bContent
		HttpServletRequest request = (HttpServletRequest) map.get("request");
		
		int bId = Integer.parseInt(request.getParameter("bId"));
		String bName = request.getParameter("bName");
		String bTitle = request.getParameter("bTitle");
		String bContent = request.getParameter("bContent");
		
		jdbcDao.modify(bId, bName, bTitle, bContent);
		
	}
	
	// reply_view
	// 댓글 입력 창

	public void bReplyViewCmd(Model model) {

//		1)  model이용 , map 선언
		Map<String, Object> map = model.asMap();
		
//		2) request 이용 ->  bid  추출
		HttpServletRequest request = (HttpServletRequest) map.get("request");
		int bId = Integer.parseInt(request.getParameter("bId"));
		
//		  3) reply_view method 이용하여 (bid)
//		    - BDto dto = dao.reply_view(bId);
		BDto dto = jdbcDao.reply_view(bId);
		
	}

	// reply_view
	// 댓글 쓰기
	public void bReplyCmd(Model model) {

//		1)  model이용 , map 선언
		Map<String, Object> map = model.asMap();
		
//		2) request 이용 -> bid, bName ,  bTitle,
//		                    bContent ,  bGroup , bStep ,
//		                    bIndent 추출
		HttpServletRequest request = (HttpServletRequest) map.get("requst");
		
		int bId = Integer.parseInt(request.getParameter("bId"));
		String bName = request.getParameter("bName");
		String bTitle = request.getParameter("bTitle");
		String bContent = request.getParameter("bContent");
		int bGroup = Integer.parseInt(request.getParameter("bGroup"));
		int bStep = Integer.parseInt(request.getParameter("bStep"));
		int bIndent = Integer.parseInt(request.getParameter("bIndent"));
		
//		3) reply method 이용하여 댓글저장 
//		    - dao.reply(bId, bName, bTitle, bContent, bGroup, bStep, bIndent);
//		    [1] bId SEQUENCE = bGroup 
//		    [2] bName, bTitle, bContent -> request Value
//		    [3] 홍해 기적
//		    [4] bStep / bIndent   + 1
		jdbcDao.reply(bId, bName, bTitle, bContent, bGroup, bStep, bIndent);
		
	}
	
}
